//@version=5
indicator('MACD-KDJ-RSI-ATR', shorttitle='MACD-KDJ-RSI-ATR',timeframe="", timeframe_gaps=true)

////MACD
fast_length = input(title="Fast Length", defval=12,group = "MACD")
slow_length = input(title="Slow Length", defval=26,group = "MACD")
src = input(title="Source", defval=close,group = "MACD")
signal_length = input.int(title="Signal Smoothing",  minval = 1, maxval = 50, defval = 9,group = "MACD")
sma_source = input.string(title="Oscillator MA Type",  defval="EMA", options=["SMA", "EMA"],group = "MACD")
sma_signal = input.string(title="Signal Line MA Type", defval="EMA", options=["SMA", "EMA"],group = "MACD")
// Plot colors
col_macd = input(#2962FF, "MACD Line  ", group="Color Settings", inline="MACD")
col_signal = input(#FF6D00, "Signal Line  ", group="Color Settings", inline="Signal")
col_grow_above = color.new(input(#26A69A, "Above   Grow", group="Histogram", inline="Above"),50)
col_fall_above = color.new(input(#B2DFDB, "Fall", group="Histogram", inline="Above"),50)
col_grow_below = color.new(input(#FFCDD2, "Below Grow", group="Histogram", inline="Below"),50)
col_fall_below = color.new(input(#FF5252, "Fall", group="Histogram", inline="Below"),50)
// Calculating
fast_ma = sma_source == "SMA" ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == "SMA" ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal
hline(0, "Zero Line", color=color.new(#787B86, 50))
plot(hist, title="Histogram", style=plot.style_columns, color=(hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below)))
plot(macd, title="MACD", color=col_macd)
plot(signal, title="Signal", color=col_signal)

////////////////////////////////
// KDJ
ilong = input(21, title='period', group = "KDJ")
isig = input(3, title='signal',group = "KDJ")
bcwsma(s, l, m) =>
    _bcwsma = float(na)
    _s = s
    _l = l
    _m = m
    _bcwsma := (_m * _s + (_l - _m) * nz(_bcwsma[1])) / _l
    _bcwsma
c = close
h = ta.highest(high, ilong)
l = ta.lowest(low, ilong)
RSV = 100 * ((c - l) / (h - l))
pK = bcwsma(RSV, isig, 1)
pD = bcwsma(pK, isig, 1)
pJ = 3 * pK - 2 * pD
KDJ = math.avg(pD, pJ, pK)
KDJScale=input.int(20,group = "KDJ")

plot((pK/10-5)/KDJScale, title='% K', color=color.new(color.orange, 0),display=display.none)
plot((pD/10-5)/KDJScale, title='% D', color=color.new(color.lime, 0),display=display.none)
plot((pJ/10-5)/KDJScale, title='% J', color=color.new(color.fuchsia, 0))
plot((KDJ/10-5)/KDJScale, title='KDJ', color=color.new(color.white, 0),display=display.all)

// stotic ta.rsi
smoothK = input.int(3, "K", minval=1,group = "RSI")
smoothD = input.int(3, "D", minval=1,group = "RSI")
lengthRSI = input.int(21, "RSI Length", minval=1,group = "RSI")
lengthStoch = input.int(21, "Stochastic Length", minval=1,group = "RSI")
src1 = input(close, "RSI Source",group = "RSI")
rsi1 = ta.rsi(src1, lengthRSI)
k = ta.sma(ta.stoch(rsi1, rsi1, rsi1, lengthStoch), smoothK)
d = ta.sma(k, smoothD)
plot((k/10-5)/KDJScale, "K", color=#2962FF)
plot((d/10-5)/KDJScale, "D", color=#FF6D00)
h0 = hline((8-5)/KDJScale, "Upper Band", color=#787B86)
//hline(50, "Middle Band", color=color.new(#787B86, 50))
h1 = hline((2-5)/KDJScale, "Lower Band", color=#787B86)
//fill(h0, h1, color=color.rgb(33, 150, 243, 90), title="Background")

//ATR  use atr to check if 
atr_length = input.int(title="ATR Length", defval=21, minval=1,group = "ATR")
atr_smoothing = input.string(title="Smoothing", defval="SMA", options=["RMA", "SMA", "EMA", "WMA"],group = "ATR")
atr_band=input.float(title="ATR Band", defval=2.0, minval=0,group = "ATR")
atr_ma_function(source, length) =>
	switch atr_smoothing
		"RMA" => ta.rma(source, length)
		"SMA" => ta.sma(source, length)
		"EMA" => ta.ema(source, length)
		=> ta.wma(source, length)
atr=atr_ma_function(ta.tr(true), atr_length)
plot(atr, title = "ATR", color=color.new(atr>atr_band? #B71C1C:color.olive, 0))